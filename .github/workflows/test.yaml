on:
  push:
    branches:
      - main
  pull_request:

name: Test
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres-version:
          - {
              tag: '14',
              sha: 'sha256:bbcaba1d74865ee6d6318b5e297d0df73d1f6b6d995cd892b60a2cf1440b716a',
            }
          - {
              tag: '15',
              sha: 'sha256:f57a3bdbf044f0b213fdc99f35a0d21c401608bf41f063176ec00c51df9655f7',
            }
          - {
              tag: '16',
              sha: 'sha256:47053cd4ee3f096afc744e53e3280de7b29b3670d2f2196c2acc0c6470923c99',
            }
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version.tag }}@${{ matrix.postgres-version.sha }}
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: false
      - name: Checkout code
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            .bin
          key: cache-go-1.24-${{ hashFiles('**/go.sum') }}-${{ hashFiles('.bin/*') }}
          restore-keys: |
            cache-go-1.24-
      - name: Test
        run: make test
        env:
          DUTY_DB_URL: postgres://postgres:password@localhost:5432/test?sslmode=disable
          DUTY_DB_CREATE: 'false'
          DUTY_DB_DISABLE_RLS: ${{ matrix.postgres-version.tag == '14' && 'true' || 'false' }}

  e2e:
    runs-on: ubuntu-latest
    services:
      loki:
        image: grafana/loki:3.5.1
        ports:
          - 3100:3100
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: false
      - name: Checkout code
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            .bin
          key: cache-go-1.24-${{ hashFiles('**/go.sum') }}-${{ hashFiles('.bin/*') }}
          restore-keys: |
            cache-go-1.24-
      - name: E2E Test
        run: |
          make ginkgo
          ginkgo -r tests/e2e/
        env:
          DUTY_DB_DISABLE_RLS: 'true'
          LOKI_URL: http://localhost:3100

  migrate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres-version:
          - {
              tag: '14',
              sha: 'sha256:bbcaba1d74865ee6d6318b5e297d0df73d1f6b6d995cd892b60a2cf1440b716a',
            }
          - {
              tag: '15',
              sha: 'sha256:f57a3bdbf044f0b213fdc99f35a0d21c401608bf41f063176ec00c51df9655f7',
            }
          - {
              tag: '16',
              sha: 'sha256:47053cd4ee3f096afc744e53e3280de7b29b3670d2f2196c2acc0c6470923c99',
            }
    env:
      migrate_command: >
        make -B tidy hack/migrate/go.mod && 
        cd hack/migrate && 
        go build main.go && ./main --db-url 'postgres://postgres:postgres@localhost:5432/test?sslmode=disable'
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: false

      - name: Check out main branch
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          ref: main

      - name: Apply base migrations
        run: ${{ env.migrate_command }}
        env:
          DUTY_DB_DISABLE_RLS: ${{ matrix.postgres-version.tag == '14' && 'true' || 'false' }}

      - name: Check out current branch
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - name: Apply new migrations
        run: ${{ env.migrate_command }}
        env:
          DUTY_DB_DISABLE_RLS: ${{ matrix.postgres-version.tag == '14' && 'true' || 'false' }}
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version.tag }}@${{ matrix.postgres-version.sha }}
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
